{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appGwRouteTableName": {
            "type": "string",
            "metadata": {
                "description": "The application gateway route table name"
            }
        },
        "appGwSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block assigned to the Application Gateway subnet"
            }
        },
        "dnsServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address set for the DNS Server of the Virtual Network"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the Azure Firewall in the transit Virtual Network"
            }
        },
        "laWorkspaceResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics Workspace resource id"
            }
        },
        "logStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The storage account used for storage of NSG flow logs"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "transitVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the transit virtual network"
            }
        },
        "transitVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the transit virtual network exists in"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "transitVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription id of the subscription the transit is stored in"
            }
        },
        "workloadVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the workload virtual network"
            }
        },
        "workloadVnetSubnetAppCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the application layer of the workload"
            }
        },
        "workloadVnetSubnetRviCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for regional vnet integration"
            }
        },
        "workloadVnetSubnetSupportCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services being served up via Private Endpoints"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "uniqueWebAppName": {
            "type": "string",
            "metadata": {
                "description": "The unique name assigned to the application deployed to app services"
            }
        }
    },
    "variables": {
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "webApiVersion": "2020-12-01",
        "appGwRouteTableUpdateDeploymentName": "deploy-appgwrt-update",
        "appNsgFlowLogDeploymentName": "deploy-appflowlog",
        "appNsgName": "[concat('nsg-app', parameters('uniqueData'))]",
        "appServiceKind": "Linux",
        "appServicePlanName": "sp-app",
        "appServicePlanSku": "P1v2",
        "appServicePrivateDnsZoneName": "privatelink.azurewebsites.net",
        "appSvcPeDeploymentName": "deploy-appsvc-pe",
        "branch": "master",
        "keyVaultDeploymentName": "deploy-workload-keyvault",
        "linuxFxVersion": "PYTHON|3.8",
        "location": "[resourceGroup().location]",
        "nsgDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../general/deploy-nsg-flow-log.json')]",
        "peDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../general/deploy-private-endpoint.json')]",
        "peeringTransitToWorkloadName": "peertransittoworkload",
        "peeringWorkloadToTransitName": "peerworkloadtotransit",
        "repoUrl": "https://github.com/mattfeltonma/python-sample-web-app.git",
        "rviNsgFlowLogDeploymentName": "deploy-rviflowlog",
        "rviNsgName": "[concat('nsg-rvi', parameters('uniqueData'))]",
        "supportNsgFlowLogDeploymentName": "deploy-supportflowlog",
        "supportNsgName": "[concat('nsg-support', parameters('uniqueData'))]",
        "transitPeeringDeploymentName": "deploy-peering",
        "workloadAppSubnetName": "snet-app",
        "workloadRviSubnetName": "snet-rvi",
        "workloadSupportSvcSubnetName": "snet-support",
        "workloadRouteTableName": "[concat('rt-workload', parameters('uniqueData'))]",
        "workloadVnetName": "[concat('vnet-workload', parameters('uniqueData'))]",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('appNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('rviNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('supportNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('appNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('appNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('appNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('rviNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('rviNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('rviNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('rviNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('supportNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('rviNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('supportNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('supportNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('workloadRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('supportNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    },
                    {
                        "name": "udr-appgw",
                        "properties": {
                            "addressPrefix":"[parameters('appGwSubnetCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('workloadVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('rviNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('workloadRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('workloadVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('workloadAppSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetAppCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('workloadRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadRviSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetRviCidr')]",
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                    }
                                }
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('workloadRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('rviNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadSupportSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetSupportCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('dnsServerIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('peeringworkloadTotransitName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('workloadVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('transitVnetSubscriptionId'),parameters('transitVnetResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('transitVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('transitPeeringDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('transitVnetSubscriptionId')]",
            "resourceGroup": "[parameters('transitVnetResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('transitVnetName'),'/',variables('peeringtransitToworkloadName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "[variables('webApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('transitPeeringDeploymentName'))]"
            ],
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('appServicePlanSku')]"
            },
            "kind": "[variables('appServiceKind')]",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[parameters('uniqueWebAppName')]",
            "location": "[variables('location')]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "alwaysOn": true
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "[variables('webApiVersion')]",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('uniqueWebAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[variables('repoUrl')]",
                        "branch": "[variables('branch')]",
                        "isManualIntegration": true,
                        "isGitHubAction": false,
                        "deploymentRollbackEnabled": false,
                        "isMercurial": false
                    }
                },
                {
                    "name": "virtualNetwork",
                    "type": "networkConfig",
                    "apiVersion": "[variables('webApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('uniqueWebAppName'))]",
                        "[concat('Microsoft.Web/sites/', parameters('uniqueWebAppName'),'/sourcecontrols/web')]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('workloadVnetName'), variables('workloadRviSubnetName'))]",
                        "swiftSupported": true
                    }
                },
                {
                    "name": "[concat(parameters('uniqueWebAppName'),'/appsettings')]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "[variables('webApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('uniqueWebAppName'))]",
                        "[concat('Microsoft.Web/sites/', parameters('uniqueWebAppName'),'/sourcecontrols/web')]",
                        "[concat('Microsoft.Web/sites/', parameters('uniqueWebAppName'),'/networkCOnfig/virtualNetwork')]"
                    ],
                    "properties": {
                        "WEBSITE_VNET_ROUTE_ALL": "1"
                    }
                }

            ]
        },
        {
            "name": "[variables('appSvcPeDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites',parameters('uniqueWebAppName'))]",
                "[concat('Microsoft.Web/sites/', parameters('uniqueWebAppName'),'/sourcecontrols/web')]",
                "[concat('Microsoft.Web/sites/', parameters('uniqueWebAppName'),'/networkCOnfig/virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('appServicePrivateDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('transitVnetResourceGroupName')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('transitVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('workloadAppSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "sites"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('workloadVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Web/sites',parameters('uniqueWebAppName'))]"
                    },
                    "resourceName": {
                        "value": "[parameters('uniqueWebAppName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('appGwRouteTableUpdateDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('transitVnetSubscriptionId')]",
            "resourceGroup": "[parameters('transitVnetResourceGroupName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('appSvcPeDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('appGwRouteTableName'),'/udr-appsvc')]",
                            "type": "Microsoft.Network/routeTables/routes",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "properties": {
                                "addressPrefix": "[concat(reference(variables('appSvcPeDeploymentName')).outputs.privateEndpointIp.value,'/32')]",
                                "nextHopType": "VirtualAppliance",
                                "nextHopIpAddress": "[parameters('firewallIp')]"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "appSvcDnsName": {
            "type": "string",
            "value": "[concat(parameters('uniqueWebAppName'), '.azurewebsites.net')]"
        }
    }
}
