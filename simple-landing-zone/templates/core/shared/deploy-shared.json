{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adDomainName": {
            "type": "string",
            "metadata": {
                "description": "The DNS domain name assigned to the Active Directory domain"
            }
        },
        "adNetBiosName": {
            "type": "string",
            "metadata": {
                "description": "The NetBios domain name assigned to the Active Directory domain"
            },
            "maxLength": 14
        },
        "adVmIp": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Active Directory domain controller virtual machine"
            }
        },
        "keyVaultAdminObjectId": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the security principal who will be admin over the Key Vault"
            }
        },
        "memberServer1Ip": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Active Directory the first member server virtual machine"
            }
        },
        "memberServer2Ip": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Active Directory the second member server virtual machine"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "reverseDnsZoneName": {
            "type": "string",
            "metadata": {
                "description": "The name of the reverse DNS zone the domain controller will register to in order to support Ubuntu-integrated servers"
            }
        },
        "sharedSvcVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedSvcVnetSubnetAdCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for Windows Active Directory domain controllers"
            }
        },
        "sharedSvcVnetSubnetInfraCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for other infrastructure services such as backup or PKI"
            }
        },
        "sharedSvcVnetSubnetPeCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for private endpoints for central services"
            }
        },
        "transitBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Bastion subnet in the transit virtual network"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        }
    },
    "variables": {
        "dnsApiVersion": "2018-09-01",
        "laApiVersion": "2015-11-01-preview",
        "opsManApiVersion": "2015-11-01-preview",
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "storageApiVersion": "2019-06-01",
        "acrDeploymentName": "deploy-acr",
        "acrDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../general/deploy-acr.json')]",
        "acrDnsZoneName": "privatelink.azurecr.io",
        "acrPlLinkName": "[concat(variables('acrDnsZoneName'), '-link')]",
        "adMemberVm1DeploymentName": "deploy-admember1",
        "adMemberVm1Name": "vmwserver01",
        "adNsgFlowLogDeploymentName": "deploy-adflowlog",
        "adNsgName": "[concat('nsg-ad', parameters('uniqueData'))]",
        "adVmDeploymentName": "deploy-ad",
        "adVmName": "vmdc01",
        "blobStorageDnsZoneName": "privatelink.blob.core.windows.net",
        "blobStoragePlLinkName": "[concat(variables('blobStorageDnsZoneName'), '-link')]",
        "dcVmDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-windows-dc.json')]",
        "deployAcrPe": "deploy-acrprivateendpoint",
        "deployBlobStPe": "deploy-storageblobprivateendpoint",
        "deployFileStPe": "deploy-storagefileprivateendpoint",
        "deployKeyVaultPe": "deploy-keyvaultprivateendpoint",
        "deployLaPe": "deploy-laprivateendpoint",
        "deployQueueStPe": "deploy-storagequeueprivateendpoint",
        "deployTableStPe": "deploy-storagetableprivateendpoint",
        "diskEncSetDeploymentName": "deploy-diskencset",
        "diskEncSetDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-disk-encryption-set.json')]",
        "userNameSecretName": "domainadminusername",
        "userPasswordSecretName": "domainadminpassword",
        "fileStorageDnsZoneName": "privatelink.file.core.windows.net",
        "fileStoragePlLinkName": "[concat(variables('fileStorageDnsZoneName'), '-link')]",
        "infraNsgFlowLogDeploymentName": "deploy-infraflowlog",
        "infraNsgName": "[concat('nsg-infra', parameters('uniqueData'))]",
        "keyVaultDeploymentName": "deploy-keyvault",
        "keyVaultDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-keyvault.json')]",
        "keyVaultDnsZoneName": "privatelink.vaultcore.azure.net",
        "keyVaultPlLinkName": "[concat(variables('keyVaultDnsZoneName'), '-link')]",
        "laPeDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-la-private-endpoint.json')]",
        "laWorkspaceName": "[concat('la', parameters('uniqueData'))]",
        "linuxVm1DeploymentName": "deploy-linuxserver1",
        "linuxVmDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-ubuntu-server.json')]",
        "linuxVm1Name": "vmlserver01",
        "location": "[resourceGroup().location]",
        "logAnalyticsRetention": 30,
        "logStorageAccountName": "[concat('stcent', parameters('uniqueData'))]",
        "memberVmDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-windows-member.json')]",
        "nsgDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-nsg-flow-log.json')]",
        "peDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-private-endpoint.json')]",
        "peNsgFlowLogDeploymentName": "deploy-peflowlog",
        "privateEndpointNsgName": "[concat('nsg-pe', parameters('uniqueData'))]",
        "queueStorageDnsZoneName": "privatelink.queue.core.windows.net",
        "queueStoragePlLinkName": "[concat(variables('queueStorageDnsZoneName'), '-link')]",
        "secretDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-secret.json')]",
        "sharedSvcDiskEncSetName": "ssdiskenc",
        "sharedSvcAdSubnetName": "snet-ad",
        "sharedSvcInfraSvcSubnetName": "snet-infra",
        "sharedSvcPeSvcSubnetName": "snet-pe",
        "sharedSvcRouteTableName": "[concat('rt-shared', parameters('uniqueData'))]",
        "sharedSvcVnetName": "[concat('vnet-shared', parameters('uniqueData'))]",
        "tableStorageDnsZoneName": "privatelink.table.core.windows.net",
        "tableStoragePlLinkName": "[concat(variables('tableStorageDnsZoneName'), '-link')]",
        "updateVnetDeploymentName": "deploy-update-vnet",
        "userNameSecretDeploymentName": "deploy-usernamesecret",
        "userPasswordSecretDeploymentName": "deploy-userpasswordsecret",
        "vmSku": "Standard_DS2_v2",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "name": "[variables('laWorkspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "[variables('laApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled",
                "retentionInDays": "[variables('logAnalyticsRetention')]"
            },
            "resources": [
                {
                    "name": "WindowsEventSystem",
                    "type": "dataSources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsEvent",
                    "properties": {
                        "eventLogName": "System",
                        "eventTypes": [
                            {
                                "eventType": "Error"
                            },
                            {
                                "eventType": "Warning"
                            },
                            {
                                "eventType": "Information"
                            }
                        ]
                    }
                },
                {
                    "name": "WindowsEventSystemApplication",
                    "type": "dataSources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsEvent",
                    "properties": {
                        "eventLogName": "Application",
                        "eventTypes": [
                            {
                                "eventType": "Error"
                            },
                            {
                                "eventType": "Warning"
                            },
                            {
                                "eventType": "Information"
                            }
                        ]
                    }
                },
                {
                    "name": "WindowsEventSystemDirectoryServices",
                    "type": "dataSources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsEvent",
                    "properties": {
                        "eventLogName": "Directory Service",
                        "eventTypes": [
                            {
                                "eventType": "Error"
                            },
                            {
                                "eventType": "Warning"
                            },
                            {
                                "eventType": "Information"
                            }
                        ]
                    }
                },
                {
                    "name": "DataSource_LinuxPerformanceCollection",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "LinuxPerformanceCollection",
                    "properties": {
                        "state": "Enabled"
                    }
                },
                {
                    "name": "VMInsights-Logical-Disk-Linux",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "LinuxPerformanceObject",
                    "properties": {
                        "objectName": "Logical Disk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "performanceCounters": [
                            {
                                "counterName": "% Used Space"
                            },
                            {
                                "counterName": "Disk Read Bytes/sec"
                            },
                            {
                                "counterName": "Disk Reads/sec"
                            },
                            {
                                "counterName": "Disk Transfers/sec"
                            },
                            {
                                "counterName": "Disk Write Bytes/sec"
                            },
                            {
                                "counterName": "Disk Writes/sec"
                            },
                            {
                                "counterName": "Free Megabytes"
                            },
                            {
                                "counterName": "Logical Disk Bytes/sec"
                            }
                        ]
                    }
                },
                {
                    "name": "VMInsights-Memory-Linux",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "LinuxPerformanceObject",
                    "properties": {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "performanceCounters": [
                            {
                                "counterName": "Available MBytes Memory"
                            }
                        ]
                    }
                },
                {
                    "name": "VMInsights-Network",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "LinuxPerformanceObject",
                    "properties": {
                        "objectName": "Network",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "performanceCounters": [
                            {
                                "counterName": "Total Bytes Received"
                            },
                            {
                                "counterName": "Total Bytes Transmitted"
                            }
                        ]
                    }
                },
                {
                    "name": "VMInsights-Processor-Pct-Processor-Time-Linux",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "LinuxPerformanceObject",
                    "properties": {
                        "objectName": "Processor",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "performanceCounters": [
                            {
                                "counterName": "% Processor Time"
                            }
                        ]
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Pct-Free-Space",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "% Free Space"
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Avg-DiskSecRead",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Read"
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Avg-DiskSecTransfer",
                    "kind": "WindowsPerformanceCounter",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Transfer"
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Avg-DiskSecWrite",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Avg. Disk sec/Write"
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Disk-BytesSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Bytes/sec"
                    }
                },
                {

                    "name": "VMInsights-LogicalDisk-Disk-ReadBytesSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Read Bytes/sec"
                    }
                },
                {
                    "name": "VMInsights-LogicalDisk-Disk-ReadsSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Reads/sec"
                    }
                },
                {

                    "name": "VMInsights-LogicalDisk-Disk-TransfersSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Transfers/sec"
                    }
                },
                {

                    "name": "VMInsights-LogicalDisk-Disk-WriteBytesSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Write Bytes/sec"
                    }
                },
                {

                    "name": "VMInsights-LogicalDisk-Disk-WritesSec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Disk Writes/sec"
                    }
                },
                {

                    "name": "VMInsights-LogicalDisk-FreeMegabytes",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "LogicalDisk",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Free Megabytes"
                    }
                },
                {
                    "name": "VMInsights-Memory-AvailableMBytes",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "Memory",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Available MBytes"
                    }
                },
                {
                    "name": "VMInsights-NetworkAdapter-BytesReceived-sec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "Network Adapter",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Bytes Received/sec"
                    }
                },
                {

                    "name": "VMInsights-NetworkAdapter-BytesSent-sec",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "Network Adapter",
                        "instanceName": "*",
                        "intervalSeconds": 60,
                        "counterName": "Bytes Sent/sec"
                    }
                },
                {

                    "name": "VMInsights-Processor-Pct-Processor-Time-Total",
                    "type": "datasources",
                    "apiVersion": "[variables('laApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    ],
                    "kind": "WindowsPerformanceCounter",
                    "properties": {
                        "objectName": "Processor",
                        "instanceName": "_Total",
                        "intervalSeconds": 60,
                        "counterName": "% Processor Time"
                    }
                }
            ]
        },
        {
            "name": "[concat('ServiceMap', '(', variables('laWorkspaceName'),')')]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "[variables('opsManApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
            },
            "plan": {
                "name": "[concat('ServiceMap', '(', variables('laWorkspaceName'),')')]",
                "product": "[concat('OMSGallery/', 'ServiceMap')]",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "name": "[concat('VMInsights', '(', variables('laWorkspaceName'),')')]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "[variables('opsManApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.OperationsManagement/solutions/',concat('ServiceMap', '(', variables('laWorkspaceName'),')'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
            },
            "plan": {
                "name": "[concat('VMInsights', '(', variables('laWorkspaceName'),')')]",
                "product": "[concat('OMSGallery/', 'VMInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "name": "[concat('KeyVaultAnalytics', '(', variables('laWorkspaceName'),')')]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "[variables('opsManApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.OperationsManagement/solutions/',concat('VMInsights', '(', variables('laWorkspaceName'),')'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
            },
            "plan": {
                "name": "[concat('KeyVaultAnalytics', '(', variables('laWorkspaceName'),')')]",
                "product": "[concat('OMSGallery/', 'KeyVaultAnalytics')]",
                "promotionCode": "",
                "publisher": "Microsoft"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "name": "[variables('logStorageAccountName')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "name": "[variables('keyVaultDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.OperationsManagement/solutions/',concat('VMInsights', '(', variables('laWorkspaceName'),')'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {                
                    "diskEncryptionSetKeyName": {
                        "value": "[variables('sharedSvcDiskEncSetName')]"
                    },
                    "keyVaultAdminObjectId": {
                        "value": "[parameters('keyVaultAdminObjectId')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('keyVaultDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('acrDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "laWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName'))]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('acrDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('usernameSecretDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('acrDeploymentName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "secretName": {
                        "value": "[variables('usernameSecretName')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('secretDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('userPasswordSecretDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('acrDeploymentName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "secretName": {
                        "value": "[variables('userPasswordSecretName')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('secretDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('diskEncSetDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "diskEncryptionSetName": {
                        "value": "[variables('sharedSvcDiskEncSetName')]"
                    },
                    "keyUrl": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultDesKeyUri.value]"
                    },
                    "keyVaultName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "sourceKeyVault": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('diskEncSetDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('infraNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('privateEndpointNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },    
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('adNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowADWS",
                        "properties": {
                            "description": "Client - Allow AD Web Services",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowADGlbCat",
                        "properties": {
                            "description": "Client - Allow AD Global Catalog",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3268-3269",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdap",
                        "properties": {
                            "description": "Client - Allow AD LDAP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowLdapSsl",
                        "properties": {
                            "description": "Client - Allow AD SSL",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "636",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcMapper",
                        "properties": {
                            "description": "Client - Allow RPC Mapper",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "135",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 104,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRpcDynamic",
                        "properties": {
                            "description": "Client - Allow RPC dynamic ports",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "49152-65535",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowSmb",
                        "properties": {
                            "description": "Client - Allow Smb",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 106,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowDns",
                        "properties": {
                            "description": "Client - Allow Dns",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 107,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowKerberos",
                        "properties": {
                            "description": "Client - Allow Kerberos",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "88",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 108,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNtp",
                        "properties": {
                            "description": "Client - Allow NTP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "123",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 109,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AlllowKerbChgSet",
                        "properties": {
                            "description": "Client - Allow Kerberos Password Set/Change",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "464",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosUdp",
                        "properties": {
                            "description": "Client - Allow NETBIOS UDP",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "137-138",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 111,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowNetbiosTcp",
                        "properties": {
                            "description": "Client - Allow NETBIOS TCP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "139",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 112,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowRdp",
                        "properties": {
                            "description": "Allow Rdp",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefixes": [
                                "[parameters('transitBastionSubnetCidr')]"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 113,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('peNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "targetNsgName": {
                        "value": "[variables('adNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('privateEndpointNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('adNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('peNsgFlowLogDeploymentName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "targetNsgName": {
                        "value": "[variables('adNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('adNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('infraNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('adNsgFlowLogDeploymentName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "targetNsgName": {
                        "value": "[variables('infraNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('infraNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts',variables('logStorageAccountName'))]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('sharedSvcRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('infraNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('sharedSvcVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('sharedSvcVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('sharedSvcAdSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetAdCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedSvcInfraSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetInfraCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedSvcPeSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetPeCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('keyVaultDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('acrDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('blobStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('fileStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('tableStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[variables('queueStorageDnsZoneName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.monitor.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.oms.opinsights.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.ods.opinsights.azure.com",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.agentsvc.azure-automation.net",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('blobStorageDnsZoneName'), '/', variables('blobStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('blobStorageDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('fileStorageDnsZoneName'), '/', variables('fileStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('fileStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('blobStorageDnsZoneName'), '/virtualNetworkLinks/', variables('blobStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('tableStorageDnsZoneName'), '/', variables('tableStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('tableStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('fileStorageDnsZoneName'), '/virtualNetworkLinks/', variables('fileStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('queueStorageDnsZoneName'), '/', variables('queueStoragePlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('queueStorageDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('tableStorageDnsZoneName'), '/virtualNetworkLinks/', variables('tableStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.monitor.azure.com/privatelink.monitor.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com",
                "[concat('Microsoft.Network/privateDnsZones/', variables('queueStorageDnsZoneName'), '/virtualNetworkLinks/', variables('queueStoragePlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.oms.opinsights.azure.com/privatelink.oms.opinsights.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com",
                "Microsoft.Network/privateDnsZones/privatelink.monitor.azure.com/virtualNetworkLinks/privatelink.monitor.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.ods.opinsights.azure.com/privatelink.ods.opinsights.azure.com-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com",
                "Microsoft.Network/privateDnsZones/privatelink.oms.opinsights.azure.com/virtualNetworkLinks/privatelink.oms.opinsights.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "privatelink.agentsvc.azure-automation.net/privatelink.agentsvc.azure-automation.net-link",
            "location": "global",
            "dependsOn": [
                "Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net",
                "Microsoft.Network/privateDnsZones/privatelink.ods.opinsights.azure.com/virtualNetworkLinks/privatelink.ods.opinsights.azure.com-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('keyVaultDnsZoneName'), '/', variables('keyVaultPlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('keyVaultDnsZoneName'))]",
                "Microsoft.Network/privateDnsZones/privatelink.agentsvc.azure-automation.net/virtualNetworkLinks/privatelink.agentsvc.azure-automation.net-link"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "[variables('dnsApiVersion')]",
            "name": "[concat(variables('acrDnsZoneName'), '/', variables('acrPlLinkName'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones',variables('acrDnsZoneName'))]",
                "[concat('Microsoft.Network/privateDnsZones/', variables('keyVaultDnsZoneName'), '/virtualNetworkLinks/', variables('keyVaultPlLinkName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                }
            }
        },
        {
            "name": "[variables('deployLaPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/privateDnsZones/', variables('acrDnsZoneName'), '/virtualNetworkLinks/', variables('acrPlLinkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "dnsVnetResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "dnsVnetSubscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "laWorkspaceName": {
                        "value": "[variables('laWorkspaceName')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('laPeDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployBlobStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployLaPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('blobStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "blob"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployFileStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployBlobStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('fileStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "file"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployTableStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployFileStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('tableStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "table"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployQueueStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployTableStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('queueStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "queue"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                   "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
                    },
                    "resourceName": {
                        "value": "[variables('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployKeyVaultPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployQueueStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('keyVaultDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "vault"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "resourceIdentifier": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployAcrPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployKeyVaultPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('acrDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "registry"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceName": {
                        "value": "[reference(variables('acrDeploymentName')).outputs.acrName.value]"
                    },
                    "resourceIdentifier": {
                        "value": "[reference(variables('acrDeploymentName')).outputs.acrResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('adVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployAcrPe'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adDomainName": {
                        "value": "[parameters('adDomainName')]"
                    },
                    "adNetBiosName": {
                        "value": "[parameters('adNetBiosName')]"
                    },
                    "dcIpAddress": {
                        "value": "[parameters('adVmIp')]"
                    },
                    "diskEncryptionSet": {
                        "value": "[reference(variables('diskEncSetDeploymentName')).outputs.diskEncryptionSetResourceId.value]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    },
                    "reverseDnsZoneName": {
                        "value": "[parameters('reverseDnsZoneName')]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedSvcAdSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('adVmName')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('dcVmDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('updateVnetDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('adVmDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('sharedSvcVnetName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[variables('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('sharedSvcVnetCidr')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('sharedSvcAdSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('sharedSvcVnetSubnetAdCidr')]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                                            },
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('sharedSvcInfraSvcSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('sharedSvcVnetSubnetInfraCidr')]",
                                            "routeTable": {
                                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                                            },
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]"
                                            }
                                        }
                                    }
                                ],
                                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                                "dhcpOptions": {
                                    "dnsServers": [
                                        "[parameters('adVmIp')]"
                                    ]
                                }
                            },
                            "resources": [
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('adMemberVm1DeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('updateVnetDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "adDomainName": {
                        "value": "[parameters('adDomainName')]"
                    },
                    "adNetBiosName": {
                        "value": "[parameters('adNetBiosName')]"
                    },
                    "diskEncryptionSet": {
                        "value": "[reference(variables('diskEncSetDeploymentName')).outputs.diskEncryptionSetResourceId.value]"
                    },
                    "serverIpAddress": {
                        "value": "[parameters('memberServer1Ip')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedSvcInfraSvcSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('adMemberVm1Name')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('memberVmDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('linuxVm1DeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('updateVnetDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "diskEncryptionSet": {
                        "value": "[reference(variables('diskEncSetDeploymentName')).outputs.diskEncryptionSetResourceId.value]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
                    },
                    "serverIpAddress": {
                        "value": "[parameters('memberServer2Ip')]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedSvcInfraSvcSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('linuxVm1Name')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('linuxVmDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
        "acrRegistryName": {
            "type": "string",
            "value": "[reference(variables('acrDeploymentName')).outputs.acrName.value]"
        },
        "acrRegistryResourceId": {
            "type": "string",
            "value": "[reference(variables('acrDeploymentName')).outputs.acrResourceId.value]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
        },
        "keyVaultResourceId": {
            "type": "string",
            "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultResourceId.value]"
        },
        "laWorkspaceId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').customerId]"
        },
        "laWorkspaceKey": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces',variables('laWorkspaceName')), '2015-03-20').primarySharedKey]"
        },
        "laWorkspaceName": {
            "type": "string",
            "value": "[variables('laWorkspaceName')]"
        },
        "laWorkspaceResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laWorkspaceName'))]"
        },
        "logStorageName": {
            "type": "string",
            "value": "[variables('logStorageAccountName')]"
        },
        "logStorageResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('logStorageAccountName'))]"
        },
        "sharedSvcAdNsgResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
        },
        "sharedSvcInfraNsgResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('infraNsgName'))]"
        },
        "sharedSvcPeNsgResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]"
        },
        "sharedSvcRouteTableName": {
            "type": "string",
            "value": "[variables('sharedSvcRouteTableName')]"
        },
        "sharedSvcRouteTableResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"
        },
        "sharedSvcAdSubnetName": {
            "type": "string",
            "value": "[variables('sharedSvcAdSubnetName')]"
        },
        "sharedSvcInfraSubnetName": {
            "type": "string",
            "value": "[variables('sharedSvcInfraSvcSubnetName')]"
        },
        "sharedSvcPeSubnetName": {
            "type": "string",
            "value": "[variables('sharedSvcPeSvcSubnetName')]"
        },
        "sharedSvcVnetName": {
            "type": "string",
            "value": "[variables('sharedSvcVnetName')]"
        },
        "sharedSvcVnetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
        }
    }
}