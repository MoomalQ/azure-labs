{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dnsServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address set for the DNS Server of the Virtual Network"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the Azure Firewall in the transit Virtual Network"
            }
        },
        "keyVaultAdminObjectId": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the security principal who will be admin over the Key Vault"
            }
        },
        "laWorkspaceResourceId": {
            "type": "string",
            "metadata": {
                "description": "The Log Analytics Workspace resource id"
            }
        },
        "logStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The storage account used for storage of NSG flow logs"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "sharedSvcVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the transit virtual network exists in"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "sharedSvcVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription id of the subscription the transit is stored in"
            }
        },
        "transitVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the transit virtual network"
            }
        },
        "transitVnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group the transit virtual network exists in"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "transitVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription id of the subscription the transit is stored in"
            }
        },
        "workloadVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the workload virtual network"
            }
        },
        "workloadVnetSubnetAppCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the application layer of the workload"
            }
        },
        "workloadVnetSubnetDataCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the data layer of the workload"
            }
        },
        "workloadVnetSubnetSupportCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services being served up via Private Endpoints"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "appNsgFlowLogDeploymentName": "deploy-appflowlog",
        "appNsgName": "[concat('nsg-app', parameters('uniqueData'))]",
        "dataNsgFlowLogDeploymentName": "deploy-dataflowlog",
        "dataNsgName": "[concat('nsg-data', parameters('uniqueData'))]",
        "keyVaultDeploymentName": "deploy-workload-keyvault",
        "keyVaultDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-keyvault.json')]",
        "keyVaultPeDeploymentName": "deploy-workload-keyvault-pe",
        "keyVaultPeDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-private-endpoint.json')]",
        "keyVaultPrivateDnsZoneName": "privatelink.vaultcore.azure.net",
        "location": "[resourceGroup().location]",
        "nsgDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../../general/deploy-nsg-flow-log.json')]",
        "peeringTransitToWorkloadName": "peertransittoworkload",
        "peeringWorkloadToTransitName": "peerworkloadtotransit",
        "workloadAppSubnetName": "snet-app",
        "workloadDataSubnetName": "snet-data",
        "workloadSupportSvcSubnetName": "snet-support",
        "workloadRouteTableName": "[concat('rt-workload', parameters('uniqueData'))]",
        "workloadVnetName": "[concat('vnet-workload', parameters('uniqueData'))]",
        "supportNsgFlowLogDeploymentName": "deploy-supportflowlog",
        "supportNsgName": "[concat('nsg-support', parameters('uniqueData'))]",
        "transitPeeringDeploymentName": "deploy-peering",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('appNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('dataNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('supportNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('appNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('appNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('appNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('dataNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('appNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('dataNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('dataNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('supportNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('dataNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('supportNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('supportNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('workloadRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('supportNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "False"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('workloadVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('workloadRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('workloadVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('workloadAppSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetAppCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('workloadRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadDataSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetDataCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('workloadRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadSupportSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetSupportCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('supportNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('dnsServerIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('peeringworkloadTotransitName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('workloadVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[resourceId(parameters('transitVnetSubscriptionId'),parameters('transitVnetResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('transitVnetName'))]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('transitPeeringDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('transitVnetSubscriptionId')]",
            "resourceGroup": "[parameters('transitVnetResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('transitVnetName'),'/',variables('peeringtransitToworkloadName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('keyVaultDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('transitPeeringDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultAdminObjectId": {
                        "value": "[parameters('keyVaultAdminObjectId')]"
                    },
                    "keyVaultNamePrefix": {
                        "value": "kvwl"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('keyVaultDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('keyVaultPeDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('keyVaultPrivateDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroupName')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('workloadSupportSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "vault"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('workloadVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultResourceId.value]"
                    },
                    "resourceName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('keyVaultPeDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
    }
}
