{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "devServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the virtual machine running used for deploying code"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the Azure Firewall where traffic will be routed to"
            }
        },
        "lawResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Log Analytics Workspace in the Shared Services subscription"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "nsgStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Storage Account for NSG Flow logs in the Transit subscription"
            }
        },
        "sharedSvcVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedSvcVnetSubnetDevCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the VM used to deploy code"
            }
        },
        "sharedSvcVnetSubnetPeCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for private endpoints for central services"
            }
        },
        "transitResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the transit resource group"
            }
        },
        "transitSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The transit subscription id"
            }
        },
        "transitVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of transit virtual network in the transit virtual network"
            }
        },
        "transitVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the transit virtual network in the transit subscription"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        }
    },
    "variables": {
        "diagnosticApiVersion": "2017-05-01-preview",
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "_generalTemplatesUri": "[uri(deployment().properties.templateLink.uri, '../../general/')]",
        "deployKeyVaultPe": "deploy-keyvaultprivateendpoint",
        "devNsgFlowLogDeploymentName": "deploy-devflowlog",
        "devNsgName": "[concat('nsg-dev', parameters('uniqueData'))]",
        "devVmDeploymentName": "deploy-dev-vm",
        "devVmName": "vmwdev01",
        "keyVaultDeploymentName": "deploy-kv-cent",
        "keyVaultDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-key-vault.json')]",
        "keyVaultDnsZoneName": "privatelink.vaultcore.azure.net",
        "keyVaultNamePrefix": "kvcnt",
        "location": "[resourceGroup().location]",
        "devVmDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-windows-dev-vm.json')]",
        "nsgDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-nsg-flow-log.json')]",
        "peDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-private-endpoint.json')]",
        "peeringSharedToTransit": "peersharedtotransit",
        "peeringTransitToShared": "peertransittoshared",
        "peNsgFlowLogDeploymentName": "deploy-peflowlog",
        "privateEndpointNsgName": "[concat('nsg-pe', parameters('uniqueData'))]",
        "secretDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-secret.json')]",
        "sharedSvcDevSubnetName": "snet-dev",
        "sharedSvcPeSvcSubnetName": "snet-pe",
        "sharedSvcRouteTableName": "[concat('rt-shared', parameters('uniqueData'))]",
        "sharedSvcRgName": "[resourceGroup().name]",
        "sharedSvcSubId": "[subscription().subscriptionId]",
        "sharedSvcVnetName": "[concat('vnet-shared', parameters('uniqueData'))]",
        "userNameSecretDeploymentName": "deploy-usernamesecret",
        "userNameSecretName": "domainadminusername",
        "userPasswordSecretDeploymentName": "deploy-userpasswordsecret",
        "userPasswordSecretName": "domainadminpassword",
        "vmSku": "Standard_D4_v4",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "name": "[variables('keyVaultDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "defaultAction": {
                        "value": "Deny"
                    },
                    "keyVaultNamePrefix": {
                        "value": "[variables('keyVaultNamePrefix')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('keyVaultDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[concat(variables('keyVaultNamePrefix'), parameters('uniqueData'),'/microsoft.insights/diag')]",
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
            "apiVersion": "[variables('diagnosticApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "name": "diag",
                "workspaceId": "[parameters('lawResourceId')]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true
                    },
                    {
                        "category": "AuditPolicyEvaluationDetails",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('usernameSecretDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/',concat(variables('keyVaultNamePrefix'), parameters('uniqueData')), '/providers/microsoft.insights/diagnosticSettings/diag')]",
                "[concat('Microsoft.Resources/deployments/', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "secretName": {
                        "value": "[variables('usernameSecretName')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('secretDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('userPasswordSecretDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "secretName": {
                        "value": "[variables('userPasswordSecretName')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('secretDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('devNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('privateEndpointNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('peNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('privateEndpointNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('privateEndpointNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('nsgStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('devNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('peNsgFlowLogDeploymentName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('devNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('devNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('devNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('nsgStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('sharedSvcRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('devNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('sharedSvcVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('devNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('sharedSvcRouteTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('sharedSvcVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('sharedSvcDevSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetDevCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('sharedSvcRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('devNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('sharedSvcPeSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetPeCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateEndpointNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('firewallIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('peeringSharedToTransit')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('sharedSvcVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[parameters('transitVnetResourceId')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('peeringTransitToShared')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "resourceGroup": "[parameters('transitResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('transitVnetName'),'/',variables('peeringTransitToShared'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "true",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(variables('sharedSvcSubId'), variables('sharedSvcRgName'), 'Microsoft.Network/virtualNetworks', variables('sharedSvcVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('deployKeyVaultPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('peeringTransitToShared'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('keyVaultDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('transitResourceGroupName')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('transitSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('sharedSvcPeSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "vault"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    },
                    "resourceName": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.keyVaultName.value]"
                    },
                    "resourceIdentifier": {
                        "value": "[reference(variables('keyVaultDeploymentName')).outputs.KeyVaultResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('devVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deployKeyVaultPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "serverIpAddress": {
                        "value": "[parameters('devServerIp')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('sharedSvcDevSubnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('devVmName')]"
                    },
                    "vnetName": {
                        "value": "[variables('sharedSvcVnetName')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('devVmDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {        
    }
}