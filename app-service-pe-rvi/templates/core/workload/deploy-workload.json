{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "devRouteTableName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the route table assigned to the Dev subnet in the Transit virtual network"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the Azure Firewall to route traffic to"
            }
        },
        "lawResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource if of the Log Analytics Workspace"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The name of the Network Watcher Resource Group"
            }
        },
        "nsgStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Storage Account for NSG Flow logs"
            }
        },
        "transitResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Transit resource group"
            }
        },
        "transitVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The IP address block assigned to the Transit virtual network"
            }
        },
        "transitVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name assigned to the Transit virtual network"
            }
        },
        "transitVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Transit virtual network"
            }
        },
        "workloadVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The IP address block assigned to the Workload virtual network"
            }
        },
        "workloadVnetSubnetAppSvcPeCidr": {
            "type": "string",
            "metadata": {
                "description": "The IP address block assigned to the App Services subnet in the Workload virtual network"
            }
        },
        "workloadVnetSubnetAppSvcRviCidr": {
            "type": "string",
            "metadata": {
                "description": "The IP address block assigned to the subnet delegated to App Services for Regional VNet Integration in the Workload virtual network"
            }
        },
        "workloadVnetSubnetSvcCidr": {
            "type": "string",
            "metadata": {
                "description": "The IP address block assigned to the subnet used for other services in the Workload virtual network"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "networkApiVersion": "2020-07-01",
        "resourcesApiVersion": "2020-06-01",
        "webApiVersion": "2020-12-01",
        "_generalTemplatesUri": "[uri(deployment().properties.templateLink.uri, '../../general/')]",
        "appServiceKind": "Linux",
        "appServicePlanName": "sp-app",
        "appServicePlanSku": "P1v3",
        "appServicePrivateDnsZoneName": "privatelink.azurewebsites.net",
        "appSvcPeDeploymentName": "deploy-appsvc-pe",
        "devRouteTableUpdateDeploymentName": "deploy-dev-rt",
        "appSvcRviRouteTable": "rt-rvi",
        "branch": "master",
        "linuxFxVersion": "PYTHON|3.8",
        "repoUrl": "https://github.com/mattfeltonma/python-sample-web-app.git",
        "rviNsgName": "nsg-rvi",
        "rviNsgFlowLogDeploymentName": "deploy-rviflowlog",
        "uniqueWebAppName": "[concat('app', parameters('uniqueData'))]",
        "workloadVnetName": "[concat('vnet-workload', parameters('uniqueData'))]",
        "workloadVnetAppSvcSubneName": "snet-appsvc",
        "workloadVnetRviSubneName": "snet-rvi",
        "workloadVnetSvcSubneName": "snet-svc",
        "workloadToTransitPeeringName": "peerworkloadtotransit",
        "workloadRgName": "[resourceGroup().name]",
        "transitToWorkloadPeeringName": "peertransittoworkload",
        "nsgDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-nsg-flow-log.json')]",
        "peDeploymentUri": "[concat(variables('_generalTemplatesUri'), 'deploy-private-endpoint.json')]",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "name": "[variables('appSvcRviRouteTable')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "routes": [
                    {
                        "name": "udr-transit",
                        "properties": {
                            "addressPrefix": "[parameters('transitVnetCidr')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    },
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('rviNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('rviNsgFlowLogDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('rviNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('rviNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('rviNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('nsgStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('workloadVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('rviNsgFlowLogDeploymentName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('workloadVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('workloadVnetAppSvcSubneName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetAppSvcPeCidr')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "[variables('workloadVnetRviSubneName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetAppSvcRviCidr')]",
                            "delegations": [
                                {
                                    "name": "delegationToAppServices",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                    }
                                }
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('appSvcRviRouteTable'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('rviNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('workloadVnetSvcSubneName')]",
                        "properties": {
                            "addressPrefix": "[parameters('workloadVnetSubnetSvcCidr')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": false,
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('firewallIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('workloadToTransitPeeringName')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('workloadVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[parameters('transitVnetResourceId')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('transitToWorkloadPeeringName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('transitResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('transitVnetName'),'/',variables('transitToWorkloadPeeringName'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(variables('workloadRgName'), 'Microsoft.Network/virtualNetworks', variables('workloadVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "[variables('webApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('transitToWorkloadPeeringName'))]"
            ],
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('appServicePlanSku')]"
            },
            "kind": "[variables('appServiceKind')]",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "[variables('webApiVersion')]",
            "name": "[variables('uniqueWebAppName')]",
            "location": "[variables('location')]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "alwaysOn": true
                }
            },
            "resources": [
                {
                    "type": "sourcecontrols",
                    "apiVersion": "[variables('webApiVersion')]",
                    "name": "web",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('uniqueWebAppName'))]"
                    ],
                    "properties": {
                        "repoUrl": "[variables('repoUrl')]",
                        "branch": "[variables('branch')]",
                        "isManualIntegration": true,
                        "isGitHubAction": false,
                        "deploymentRollbackEnabled": false,
                        "isMercurial": false
                    }
                },
                {
                    "name": "virtualNetwork",
                    "type": "networkConfig",
                    "apiVersion": "[variables('webApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('uniqueWebAppName'))]",
                        "[concat('Microsoft.Web/sites/', variables('uniqueWebAppName'),'/sourcecontrols/web')]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('workloadVnetName'), variables('workloadVnetRviSubneName'))]",
                        "swiftSupported": true
                    }
                },
                {
                    "name": "[concat(variables('uniqueWebAppName'),'/appsettings')]",
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "[variables('webApiVersion')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('uniqueWebAppName'))]",
                        "[concat('Microsoft.Web/sites/', variables('uniqueWebAppName'),'/sourcecontrols/web')]",
                        "[concat('Microsoft.Web/sites/', variables('uniqueWebAppName'),'/networkCOnfig/virtualNetwork')]"
                    ],
                    "properties": {
                        "WEBSITE_VNET_ROUTE_ALL": "1"
                    }
                }

            ]
        },
        {
            "name": "[variables('appSvcPeDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('uniqueWebAppName'))]",
                "[concat('Microsoft.Web/sites/', variables('uniqueWebAppName'),'/sourcecontrols/web')]",
                "[concat('Microsoft.Web/sites/', variables('uniqueWebAppName'),'/networkCOnfig/virtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('appServicePrivateDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('transitResourceGroupName')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('workloadVnetAppSvcSubneName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "sites"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('workloadVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[resourceId('Microsoft.Web/sites',variables('uniqueWebAppName'))]"
                    },
                    "resourceName": {
                        "value": "[variables('uniqueWebAppName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('devRouteTableUpdateDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('transitResourceGroupName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('appSvcPeDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('devRouteTableName'),'/udr-appsvc')]",
                            "type": "Microsoft.Network/routeTables/routes",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "properties": {
                                "addressPrefix": "[concat(reference(variables('appSvcPeDeploymentName')).outputs.privateEndpointIp.value,'/32')]",
                                "nextHopType": "VirtualAppliance",
                                "nextHopIpAddress": "[parameters('firewallIp')]"
                            }
                        }
                    ]
                }
            }
        }
    ]
}