{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "cloudAddressSpace": {
            "type": "string",
            "metadata": {
                "description": "The CIDR block that will be dedicated to this Azure environment"
            }
        },
        "dnsServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address used to set the DNS settings for the virtual network and Azure Firewall"
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
                "description": "The name of the central Azure Key Vault instance"
            }
        },
        "keyVaultResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the central Azure Key Vault instance"
            }
        },
        "laWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the central Log Analytics Workspace"
            }
        },
        "laWorkspaceResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the central Log Analytics Workspace"
            }
        },
        "logStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account used for log storage"
            }
        },
        "logStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the storage account used for log storage"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "sharedSvcVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedSvcVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Shared Services Virtual Network"
            }
        },
        "sharedSvcVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource ID of the Shared Servies Virtual Network"
            }
        },
        "sharedSvcVnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Shared Services Virtual Network exists"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "sharedSvcVnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The subscription ID where the Shared Services resources exist"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "sharedSvcVnetSubnetAdCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the AD subnet in the Shared Services virtual network"
            }
        },
        "transitBastionSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Bastion subnet in the transit virtual network"
            }
        },
        "transitCentralSvcSubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used to store centralized private enpdoint services"
            }
        },
        "transitFwSubnetPayCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Azure Firewall payload subnet in the transit virtual network"
            }
        },
        "transitGatewaySubnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Gateway subnet in the transit virtual network"
            }
        },
        "transitVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the transit virtual network"
            }
        },
        "workloadVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the spoke virtual network.  This is used in the firewall rules."
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that will be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "diagnosticApiVersion": "2017-05-01-preview",
        "networkApiVersion": "2020-04-01",
        "resourcesApiVersion": "2020-06-01",
        "bastionName": "[concat('bst', parameters('uniqueData'))]",
        "bastionNsgName": "[concat('nsg-bst', parameters('uniqueData'))]",
        "bastionPublicIpName": "[concat('pip-bst', parameters('uniqueData'))]",
        "bastionSubnetName": "AzureBastionSubnet",
        "blobStorageDnsZoneName": "privatelink.blob.core.windows.net",
        "centralSvcNsgName": "[concat('nsg-cent', parameters('uniqueData'))]",
        "centralSvcSubnetName": "snet-central",
        "deployBastionNsgFlowLog": "deploy-bastionnsgflowlog",
        "deployBlobStPe": "deploy-storageblobprivateendpoint",
        "deployCentralSvcNsgFlowLog": "deploy-centsvcnsgflowlog",
        "deployDnsServerSettings": "deploy-dnsserversettings",
        "deployFileStPe": "deploy-storagefileprivateendpoint",
        "deployFirewallPolicy": "deploy-firewallpolicy",
        "deployKeyVaultPe": "deploy-keyvaultprivateendpoint",
        "deployLaPe": "deploy-laprivateendpoint",
        "deployTableStPe": "deploy-storagetableprivateendpoint",
        "deployQueueStPe": "deploy-storagequeueprivateendpoint",
        "fileStorageDnsZoneName": "privatelink.file.core.windows.net",
        "firewallAz": [
            "1"
        ],
        "firewallName": "[concat('fw', parameters('uniqueData'))]",
        "firewallDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../shared/deploy-lz-firewall-policy.json')]",
        "firewallPublicIpName": "[concat('pip-fw', parameters('uniqueData'))]",
        "fwPayloadSubnetName": "AzureFirewallSubnet",
        "gatewaySubnetName": "GatewaySubnet",
        "keyVaultDnsZoneName": "privatelink.vaultcore.azure.net",
        "transitVnetName": "[concat('vnet-transit', parameters('uniqueData'))]",
        "nsgDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../shared/deploy-nsg-flow-log.json')]",
        "laPeDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../shared/deploy-la-private-endpoint.json')]",
        "location": "[resourceGroup().location]",
        "peeringTransitToShared": "peertransittoshared",
        "peeringSharedToTransit": "peersharedtotransit",
        "peDeploymentUri": "[uri(deployment().properties.templateLink.uri, '../shared/deploy-private-endpoint.json')]",
        "queueStorageDnsZoneName": "privatelink.queue.core.windows.net",
        "sharedSvcPeeringDeploymentName": "deploy-peering",
        "tableStorageDnsZoneName": "privatelink.table.core.windows.net",
        "vnetStandardDdosProtection": false
    },
    "resources": [
        {
            "name": "[variables('bastionPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[variables('firewallPublicIpName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIpAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard"
            }
        },
        {
            "name": "[variables('deployFirewallPolicy')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adSubnet": {
                        "value": "[parameters('sharedSvcVnetSubnetAdCidr')]"
                    },
                    "cloudAddressSpace": {
                        "value": "[parameters('cloudAddressSpace')]"
                    },
                    "dnsSettings": {
                        "value": [
                            "[parameters('dnsServerIp')]"
                        ]
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('firewallDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('bastionNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHttps",
                        "properties": {
                            "description": "Allow incoming HTTPS traffic from Internet",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowControlPlane",
                        "properties": {
                            "description": "Allow control plane traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "443",
                                "4443"
                            ],
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowDataPlane",
                        "properties": {
                            "description": "Allows Azure Bastion data plane traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHealthProbes",
                        "properties": {
                            "description": "Allows health probes from Azure Load Balancer",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInbound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowOutboundDataPlane",
                        "properties": {
                            "description": "Allows Azure Bastion data plane traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowOutboundAzureCloud",
                        "properties": {
                            "description": "Allows Bastion hosts to communicate with management components",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowOutboundInternet",
                        "properties": {
                            "description": "Allows Bastion to validate certificates",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "AllowOutboundVirtualNetwork",
                        "properties": {
                            "description": "Allows Bastion to connect to VMs over SSH and RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "3389",
                                "22"
                            ],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('centralSvcNsgName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('deployBastionNsgFlowLog')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('bastionNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('bastionNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployCentralSvcNsgFlowLog')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deployBastionNsgFlowLog'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('centralSvcNsgName')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('centralSvcNsgName'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('nsgDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('transitVnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployCentralSvcNsgFlowLog'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('transitVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('gatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('transitGatewaySubnetCidr')]"
                        }
                    },
                    {
                        "name": "[variables('bastionSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('transitBastionSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('fwPayloadSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('transitFwSubnetPayCidr')]"
                        }
                    },
                    {
                        "name": "[variables('centralSvcSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('transitCentralSvcSubnetCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
                            },
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]"
            },
            "resources": [
                {
                    "name": "[variables('peeringTransitToShared')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('networkApiVersion')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('transitVnetName'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "false",
                        "remoteVirtualNetwork": {
                            "id": "[parameters('sharedSvcVnetResourceId')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('sharedSvcPeeringDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "resourceGroup": "[parameters('sharedSvcVnetResourceGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('transitVnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('sharedSvcVnetName'),'/',variables('peeringSharedToTransit'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "false",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('transitVnetName'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('firewallName')]",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('firewallPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('transitVnetName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('deployFirewallPolicy'))]",
                "[concat('Microsoft.Resources/deployments/',variables('sharedSvcPeeringDeploymentName'))]"
            ],
            "zones": "[variables('firewallAz')]",
            "properties": {
                "firewallPolicy": {
                    "id": "[reference(variables('deployFirewallPolicy')).outputs.firewallPolicyId.value]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('transitVnetName'), variables('fwPayloadSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('firewallPublicIpName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('firewallName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "[variables('diagnosticApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/azureFirewalls',variables('firewallName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[parameters('laWorkspaceResourceId')]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallDnsProxy",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            },
            "resources": [
            ]
        },
        {
            "name": "[variables('deployDnsServerSettings')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/azureFirewalls/',variables('firewallName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[variables('transitVnetName')]",
                            "apiVersion": "[variables('networkApiVersion')]",
                            "location": "[variables('location')]",
                            "tags": "[parameters('tags')]",
                            "dependsOn": [
                            ],
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('transitVnetCidr')]"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[variables('gatewaySubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('transitGatewaySubnetCidr')]"
                                        }
                                    },
                                    {
                                        "name": "[variables('bastionSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('transitBastionSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNsgName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[variables('fwPayloadSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('transitFwSubnetPayCidr')]"
                                        }
                                    },
                                    {
                                        "name": "[variables('centralSvcSubnetName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('transitCentralSvcSubnetCidr')]",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('centralSvcNsgName'))]"
                                            },
                                            "privateEndpointNetworkPolicies": "Disabled"
                                        }
                                    }
                                ],
                                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                                "dhcpOptions": {
                                    "dnsServers": [
                                        "[parameters('dnsServerIp')]"
                                    ]
                                }
                            },
                            "resources": [
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('deployBlobStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployDnsServerSettings'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('blobStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "blob"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    },
                    "resourceName": {
                        "value": "[parameters('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployFileStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployBlobStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('fileStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "file"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    },
                    "resourceName": {
                        "value": "[parameters('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployTableStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployFileStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('tableStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "table"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    },
                    "resourceName": {
                        "value": "[parameters('logStorageAccountName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployQueueStPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployTableStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('queueStorageDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "queue"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "resourceName": {
                        "value": "[parameters('logStorageAccountName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[parameters('logStorageAccountResourceId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployKeyVaultPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployQueueStPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('keyVaultDnsZoneName')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "vault"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "resourceName": {
                        "value": "[parameters('keyVaultName')]"
                    },
                    "resourceIdentifier": {
                        "value": "[parameters('keyVaultResourceId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('peDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deployLaPe')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deployKeyVaultPe'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "dnsVnetResourceGroup": {
                        "value": "[parameters('sharedSvcVnetResourceGroup')]"
                    },
                    "dnsVnetSubscriptionId": {
                        "value": "[parameters('sharedSvcVnetSubscriptionId')]"
                    },
                    "laWorkspaceName": {
                        "value": "[parameters('laWorkspaceName')]"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[parameters('laWorkspaceResourceId')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('centralSvcSubnetName')]"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('transitVnetName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('laPeDeploymentUri')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('bastionName')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('transitVnetName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('deployLaPe'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "bastionConfig",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('transitVnetName'), variables('bastionSubnetName'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('bastionName'),'/microsoft.insights/diag')]",
            "type": "Microsoft.Network/bastionHosts/providers/diagnosticSettings",
            "apiVersion": "[variables('diagnosticApiVersion')]",
            "location": "[variables('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/bastionHosts',variables('bastionName'))]"
            ],
            "properties": {
                "name": "SendToWorkspace",
                "workspaceId": "[parameters('laWorkspaceResourceId')]",
                "logs": [
                    {
                        "category": "BastionAuditLogs",
                        "enabled": true
                    }
                ],
                "metrics": [
                ]
            },
            "resources": [
            ]
        }
    ],
    "outputs": {
        "firewallIp": {
            "type": "string",
            "value": "[reference(variables('firewallName')).ipConfigurations[0].properties.privateIPAddress]"
        },
        "transitVnetName": {
            "type": "string",
            "value": "[variables('transitVnetName')]"
        }
    }
}
